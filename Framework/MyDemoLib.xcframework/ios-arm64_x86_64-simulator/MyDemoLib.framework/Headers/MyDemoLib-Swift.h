#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef MYDEMOLIB_SWIFT_H
#define MYDEMOLIB_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MyDemoLib",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

typedef SWIFT_ENUM(NSInteger, ButtonImagePosition, open) {
  ButtonImagePositionLeft = 0,
  ButtonImagePositionTop = 1,
  ButtonImagePositionBottom = 2,
  ButtonImagePositionRight = 3,
};

@class NSString;
@class UIColor;
@class UIFont;
@class NSCoder;

IB_DESIGNABLE
SWIFT_CLASS("_TtC9MyDemoLib17DGRunkeeperSwitch")
@interface DGRunkeeperSwitch : UIControl
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull titles;
@property (nonatomic, readonly) NSInteger selectedIndex;
@property (nonatomic) CGFloat selectedBackgroundInset;
@property (nonatomic, strong) IBInspectable UIColor * _Null_unspecified selectedBackgroundColor;
@property (nonatomic, strong) IBInspectable UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) IBInspectable UIColor * _Null_unspecified selectedTitleColor;
@property (nonatomic, strong) UIFont * _Null_unspecified titleFont;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull titleFontFamily;
@property (nonatomic) IBInspectable CGFloat titleFontSize;
@property (nonatomic) NSTimeInterval animationDuration;
@property (nonatomic) CGFloat animationSpringDamping;
@property (nonatomic) CGFloat animationInitialSpringVelocity;
- (nonnull instancetype)initWithTitles:(NSArray<NSString *> * _Nonnull)titles OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)setSelectedIndex:(NSInteger)selectedIndex animated:(BOOL)animated;
- (void)layoutSubviews;
@end

@class UIGestureRecognizer;

@interface DGRunkeeperSwitch (SWIFT_EXTENSION(MyDemoLib)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9MyDemoLib29DGRunkeeperSwitchRoundedLayer")
@interface DGRunkeeperSwitchRoundedLayer : CALayer
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;
@class UITableViewCell;

SWIFT_CLASS("_TtC9MyDemoLib20FGBaseTableViewModel")
@interface FGBaseTableViewModel : NSObject <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MyDemoLib16FGDatePickerView")
@interface FGDatePickerView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum InfiniteScrollingState : NSInteger;

SWIFT_CLASS("_TtC9MyDemoLib23FGInfiniteScrollingView")
@interface FGInfiniteScrollingView : UIView
@property (nonatomic, readonly) enum InfiniteScrollingState state;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (void)setCustom:(UIView * _Nonnull)view for:(enum InfiniteScrollingState)state;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (void)startAnimating;
- (void)stopAnimating;
- (void)endDataAnimating;
@end


SWIFT_CLASS("_TtC9MyDemoLib18FGMouduleBlockView")
@interface FGMouduleBlockView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC9MyDemoLib15FGNetworkConfig")
@interface FGNetworkConfig : NSObject
@property (nonatomic, readonly) BOOL isDebug;
@property (nonatomic, readonly, copy) NSString * _Nonnull baseURL;
@property (nonatomic, readonly, copy) NSString * _Nullable sinatureKey;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull requiredDic;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull optionalDic;
@property (nonatomic, readonly, copy) void (^ _Nullable commonErrorHandler)(NSInteger);
@property (nonatomic, readonly, copy) NSString * _Nullable p12Path;
@property (nonatomic, readonly, copy) NSString * _Nullable p12AccessKey;
- (nonnull instancetype)initWithIsDebug:(BOOL)isDebug baseURL:(NSString * _Nonnull)baseURL sinatureKey:(NSString * _Nullable)sinatureKey requiredDic:(NSDictionary<NSString *, id> * _Nonnull)requiredDic optionalDic:(NSDictionary<NSString *, id> * _Nonnull)optionalDic commonErrorHandler:(void (^ _Nullable)(NSInteger))commonErrorHandler p12Path:(NSString * _Nullable)p12Path p12AccessKey:(NSString * _Nullable)p12AccessKey OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSAttributedString;
@class NSTextContainer;

SWIFT_CLASS_NAMED("FGPlaceholderTextViewSwift")
@interface FGPlaceholderTextView : UITextView
@property (nonatomic, copy) NSString * _Nonnull placeholder;
@property (nonatomic, strong) UIColor * _Nonnull placeholderTextColor;
@property (nonatomic, strong) UIFont * _Nonnull placeholderFont;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedPlaceholder;
/// Fix Bug: can’t call UIView init(frame: CGRect)
/// Probably a bug of Apple
/// \param frame frame
///
- (nonnull instancetype)initWithFrame:(CGRect)frame;
- (nonnull instancetype)initWithFrame:(CGRect)frame placeholder:(NSString * _Nonnull)placeholder color:(UIColor * _Nullable)color OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC9MyDemoLib14FGProgressView")
@interface FGProgressView : UIView
@property (nonatomic, strong) UIColor * _Nonnull progressTintColor;
@property (nonatomic, strong) UIColor * _Nonnull borderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull progressBackgroundColor;
@property (nonatomic) CGFloat progress;
@property (nonatomic) CGFloat progressRadius;
@property (nonatomic) CGFloat progressBorderWidth;
@property (nonatomic) BOOL showPluse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)didMoveToWindow;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)setProgress:(CGFloat)progress animated:(BOOL)animated;
@end

enum PullToRefreshState : NSInteger;

SWIFT_CLASS("_TtC9MyDemoLib19FGPullToRefreshView")
@interface FGPullToRefreshView : UIView
@property (nonatomic, readonly) enum PullToRefreshState state;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)layoutSubviews;
- (void)startAnimating;
- (void)stopAnimating;
- (void)endDataAnimating;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (void)setTitle:(NSString * _Nullable)title for:(enum PullToRefreshState)state;
- (void)setSubtitle:(NSString * _Nullable)subtitle for:(enum PullToRefreshState)state;
- (void)setCustomView:(UIView * _Nullable)view for:(enum PullToRefreshState)state;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@end


SWIFT_CLASS("_TtC9MyDemoLib7FGTools")
@interface FGTools : NSObject
+ (void)makeErrorToast:(NSError * _Nullable)error;
+ (void)makeToast:(NSString * _Nullable)message duration:(NSTimeInterval)duration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIButton;
@class UIImageView;

SWIFT_CLASS("_TtC9MyDemoLib13FGViewFactory")
@interface FGViewFactory : NSObject
+ (UIButton * _Nonnull)commitButtonWithFrame:(CGRect)rect title:(NSString * _Nullable)title SWIFT_WARN_UNUSED_RESULT;
+ (UIImageView * _Nonnull)nextImageViewWithTintColor:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC9MyDemoLib21FGWKWebViewController")
@interface FGWKWebViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface FGWKWebViewController (SWIFT_EXTENSION(MyDemoLib)) <WKUIDelegate>
@end


@interface FGWKWebViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end

@class WKWebView;
@class WKNavigation;

@interface FGWKWebViewController (SWIFT_EXTENSION(MyDemoLib)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end

@class FYMenuItem;

SWIFT_CLASS("_TtC9MyDemoLib6FYMenu")
@interface FYMenu : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FYMenu * _Nonnull standard;)
+ (FYMenu * _Nonnull)standard SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// present menu view
/// \param view container view
///
/// \param rect this parameter decides the location of the little triangle ▲
///
/// \param menuItems items will be showed
///
/// \param selectedBlock selected index call back
///
/// \param dissmissBlock dissmissed call back
///
+ (void)showMenuIn:(UIView * _Nonnull)view from:(CGRect)rect menuItems:(NSArray<FYMenuItem *> * _Nonnull)menuItems selected:(void (^ _Nonnull)(NSInteger))selected dismissed:(void (^ _Nonnull)(void))dismissed;
@end

@class UIImage;

SWIFT_CLASS("_TtC9MyDemoLib10FYMenuItem")
@interface FYMenuItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic) NSTextAlignment textAlighment;
@property (nonatomic) BOOL isSelected;
@property (nonatomic) BOOL showGradientLine;
@property (nonatomic) BOOL showSelectImage;
@property (nonatomic, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, strong) UIImage * _Nullable selectImage;
@property (nonatomic) NSInteger index;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MyDemoLib22FYNavigationController")
@interface FYNavigationController : UINavigationController
- (void)viewDidLoad;
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface FYNavigationController (SWIFT_EXTENSION(MyDemoLib)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, InfiniteScrollingState, open) {
  InfiniteScrollingStateStopped = 0,
  InfiniteScrollingStateTriggered = 1,
  InfiniteScrollingStateLoading = 2,
  InfiniteScrollingStateAll = 10,
};



@interface NSString (SWIFT_EXTENSION(MyDemoLib))
- (NSString * _Nonnull)phoneNumberFormat SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isContainChineseString SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9MyDemoLib12PaddingLabel")
@interface PaddingLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawTextInRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, PresentationDirection, open) {
  PresentationDirectionLeft = 0,
  PresentationDirectionTop = 1,
  PresentationDirectionRight = 2,
  PresentationDirectionBottom = 3,
  PresentationDirectionMiddle = 4,
};

typedef SWIFT_ENUM(NSInteger, PullToRefreshState, open) {
  PullToRefreshStateStopped = 0,
  PullToRefreshStateTriggered = 1,
  PullToRefreshStateLoading = 2,
  PullToRefreshStateAll = 3,
};


SWIFT_CLASS("_TtC9MyDemoLib26SlideInPresentationManager")
@interface SlideInPresentationManager : NSObject
@property (nonatomic) enum PresentationDirection direction;
@property (nonatomic) BOOL disableCompactHeight;
/// presenting size
@property (nonatomic) CGSize size;
@property (nonatomic) CGPoint offset;
@property (nonatomic, copy) void (^ _Nullable dismissed)(void);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIPresentationController;
@class UITraitCollection;

@interface SlideInPresentationManager (SWIFT_EXTENSION(MyDemoLib)) <UIAdaptivePresentationControllerDelegate>
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller traitCollection:(UITraitCollection * _Nonnull)traitCollection SWIFT_WARN_UNUSED_RESULT;
@end

@protocol UIViewControllerAnimatedTransitioning;

@interface SlideInPresentationManager (SWIFT_EXTENSION(MyDemoLib)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, TableOperation, open) {
  TableOperationRefresh = 0,
  TableOperationMoreData = 1,
};


@interface UIAlertController (SWIFT_EXTENSION(MyDemoLib))
- (void)fg_show;
- (void)fg_show:(BOOL)animated;
@end



@interface UIButton (SWIFT_EXTENSION(MyDemoLib))
/// 自定义image与button 位置
/// <ul>
///   <li>
///     在调用该方法前可以先调用 layoutifneed 方法来强制在当前runloop中计算出 button的width height
///   </li>
/// </ul>
/// \param poistion image 相对于button 位置
///
/// \param space image 与 button 间距
///
- (void)resizeImagePositionWithPoistion:(enum ButtonImagePosition)poistion space:(CGFloat)space;
@end


@interface UIColor (SWIFT_EXTENSION(MyDemoLib))
- (nonnull instancetype)initWithHex:(NSInteger)rgb;
- (nonnull instancetype)initWithHex:(NSInteger)rgb alpha:(CGFloat)alpha;
- (nonnull instancetype)initWithHexString:(NSString * _Nonnull)hex;
- (nonnull instancetype)initWithHexString:(NSString * _Nonnull)hex alpha:(CGFloat)alpha;
@end


@interface UINavigationBar (SWIFT_EXTENSION(MyDemoLib))
- (void)fg_setTransparent;
- (void)fg_changeColor:(UIColor * _Nonnull)color;
@end


@interface UINavigationBar (SWIFT_EXTENSION(MyDemoLib))
/// Applies a background gradient with the given colors
- (void)applyWithGradient:(NSArray<UIColor *> * _Nonnull)colors;
- (void)cleanGradient;
@end



@interface UIScrollView (SWIFT_EXTENSION(MyDemoLib))
- (void)addInfiniteScrollingWithActionHandler:(void (^ _Nonnull)(void))actionHandler;
- (void)stopInfiniteScrolling;
@property (nonatomic, readonly, strong) FGInfiniteScrollingView * _Nonnull infiniteScrollingView;
@property (nonatomic) BOOL showsInfiniteScrolling;
@end


@interface UIScrollView (SWIFT_EXTENSION(MyDemoLib))
@property (nonatomic, readonly, strong) FGPullToRefreshView * _Nonnull pullToRefreshView;
- (void)addPullToRefreshWithActionHandler:(void (^ _Nonnull)(void))actionHandler;
- (void)addPulltoRefreshWithHeight:(CGFloat)height actionHandler:(void (^ _Nonnull)(void))actionHandler;
- (void)triggerPullToRefresh;
- (void)stopRefreshing;
@property (nonatomic) BOOL showsPullToRefresh;
@end



@interface UITabBar (SWIFT_EXTENSION(MyDemoLib))
- (void)showBadgeAt:(NSInteger)itemIndex;
- (void)hideBadgeAt:(NSInteger)itemIndex;
@end







@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (BOOL)fg_isModal SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)showHUD;
- (void)showHUD:(UIView * _Nullable)container;
- (void)hideHUD;
- (void)hideHUD:(UIView * _Nullable)container;
@end


@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)presentSlideIn:(UIViewController * _Nonnull)viewController animated:(BOOL)animated direction:(enum PresentationDirection)direction offset:(CGPoint)offset completion:(void (^ _Nullable)(void))completion dismissed:(void (^ _Nullable)(void))dismissed;
- (void)presentSlideIn:(UIViewController * _Nonnull)viewController direction:(enum PresentationDirection)direction offset:(CGPoint)offset;
- (void)dismissSlideInViewControllerWithAnimated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
@end


@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)showTips:(NSString * _Nonnull)tips;
- (void)showTips:(NSString * _Nonnull)tips container:(UIView * _Nullable)container;
- (void)showAttributeTips:(NSAttributedString * _Nonnull)tips container:(UIView * _Nullable)container;
- (void)showTipsWithError:(NSError * _Nonnull)error;
- (void)showTipsWithError:(NSError * _Nonnull)error container:(UIView * _Nullable)container;
- (void)hideTips;
- (void)hideTips:(UIView * _Nullable)container;
@end


@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (UIButton * _Nonnull)fg_defaultBackBarButton SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_leftBarButtonWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_leftBarButtonWithImage:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_rightBarButtonWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_rightBarButtonWithImage:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIButton *> * _Nonnull)fg_rightBarButtonsWithImages:(NSArray<UIImage *> * _Nonnull)images SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIButton *> * _Nonnull)fg_rightBarButtonsWithStrings:(NSArray<NSString *> * _Nonnull)strings SWIFT_WARN_UNUSED_RESULT;
- (void)fg_barButtonWithCustomView:(UIView * _Nonnull)customView;
- (void)fg_barButtonWithCustomView:(UIView * _Nonnull)customView left:(BOOL)left;
- (void)fg_barButtonWithCustomViews:(NSArray<UIView *> * _Nonnull)customViews;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef MYDEMOLIB_SWIFT_H
#define MYDEMOLIB_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MyDemoLib",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

typedef SWIFT_ENUM(NSInteger, ButtonImagePosition, open) {
  ButtonImagePositionLeft = 0,
  ButtonImagePositionTop = 1,
  ButtonImagePositionBottom = 2,
  ButtonImagePositionRight = 3,
};

@class NSString;
@class UIColor;
@class UIFont;
@class NSCoder;

IB_DESIGNABLE
SWIFT_CLASS("_TtC9MyDemoLib17DGRunkeeperSwitch")
@interface DGRunkeeperSwitch : UIControl
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull titles;
@property (nonatomic, readonly) NSInteger selectedIndex;
@property (nonatomic) CGFloat selectedBackgroundInset;
@property (nonatomic, strong) IBInspectable UIColor * _Null_unspecified selectedBackgroundColor;
@property (nonatomic, strong) IBInspectable UIColor * _Null_unspecified titleColor;
@property (nonatomic, strong) IBInspectable UIColor * _Null_unspecified selectedTitleColor;
@property (nonatomic, strong) UIFont * _Null_unspecified titleFont;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull titleFontFamily;
@property (nonatomic) IBInspectable CGFloat titleFontSize;
@property (nonatomic) NSTimeInterval animationDuration;
@property (nonatomic) CGFloat animationSpringDamping;
@property (nonatomic) CGFloat animationInitialSpringVelocity;
- (nonnull instancetype)initWithTitles:(NSArray<NSString *> * _Nonnull)titles OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)setSelectedIndex:(NSInteger)selectedIndex animated:(BOOL)animated;
- (void)layoutSubviews;
@end

@class UIGestureRecognizer;

@interface DGRunkeeperSwitch (SWIFT_EXTENSION(MyDemoLib)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9MyDemoLib29DGRunkeeperSwitchRoundedLayer")
@interface DGRunkeeperSwitchRoundedLayer : CALayer
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;
@class UITableViewCell;

SWIFT_CLASS("_TtC9MyDemoLib20FGBaseTableViewModel")
@interface FGBaseTableViewModel : NSObject <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MyDemoLib16FGDatePickerView")
@interface FGDatePickerView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum InfiniteScrollingState : NSInteger;

SWIFT_CLASS("_TtC9MyDemoLib23FGInfiniteScrollingView")
@interface FGInfiniteScrollingView : UIView
@property (nonatomic, readonly) enum InfiniteScrollingState state;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (void)setCustom:(UIView * _Nonnull)view for:(enum InfiniteScrollingState)state;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (void)startAnimating;
- (void)stopAnimating;
- (void)endDataAnimating;
@end


SWIFT_CLASS("_TtC9MyDemoLib18FGMouduleBlockView")
@interface FGMouduleBlockView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC9MyDemoLib15FGNetworkConfig")
@interface FGNetworkConfig : NSObject
@property (nonatomic, readonly) BOOL isDebug;
@property (nonatomic, readonly, copy) NSString * _Nonnull baseURL;
@property (nonatomic, readonly, copy) NSString * _Nullable sinatureKey;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull requiredDic;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull optionalDic;
@property (nonatomic, readonly, copy) void (^ _Nullable commonErrorHandler)(NSInteger);
@property (nonatomic, readonly, copy) NSString * _Nullable p12Path;
@property (nonatomic, readonly, copy) NSString * _Nullable p12AccessKey;
- (nonnull instancetype)initWithIsDebug:(BOOL)isDebug baseURL:(NSString * _Nonnull)baseURL sinatureKey:(NSString * _Nullable)sinatureKey requiredDic:(NSDictionary<NSString *, id> * _Nonnull)requiredDic optionalDic:(NSDictionary<NSString *, id> * _Nonnull)optionalDic commonErrorHandler:(void (^ _Nullable)(NSInteger))commonErrorHandler p12Path:(NSString * _Nullable)p12Path p12AccessKey:(NSString * _Nullable)p12AccessKey OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSAttributedString;
@class NSTextContainer;

SWIFT_CLASS_NAMED("FGPlaceholderTextViewSwift")
@interface FGPlaceholderTextView : UITextView
@property (nonatomic, copy) NSString * _Nonnull placeholder;
@property (nonatomic, strong) UIColor * _Nonnull placeholderTextColor;
@property (nonatomic, strong) UIFont * _Nonnull placeholderFont;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedPlaceholder;
/// Fix Bug: can’t call UIView init(frame: CGRect)
/// Probably a bug of Apple
/// \param frame frame
///
- (nonnull instancetype)initWithFrame:(CGRect)frame;
- (nonnull instancetype)initWithFrame:(CGRect)frame placeholder:(NSString * _Nonnull)placeholder color:(UIColor * _Nullable)color OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC9MyDemoLib14FGProgressView")
@interface FGProgressView : UIView
@property (nonatomic, strong) UIColor * _Nonnull progressTintColor;
@property (nonatomic, strong) UIColor * _Nonnull borderTintColor;
@property (nonatomic, strong) UIColor * _Nonnull progressBackgroundColor;
@property (nonatomic) CGFloat progress;
@property (nonatomic) CGFloat progressRadius;
@property (nonatomic) CGFloat progressBorderWidth;
@property (nonatomic) BOOL showPluse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)didMoveToWindow;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)setProgress:(CGFloat)progress animated:(BOOL)animated;
@end

enum PullToRefreshState : NSInteger;

SWIFT_CLASS("_TtC9MyDemoLib19FGPullToRefreshView")
@interface FGPullToRefreshView : UIView
@property (nonatomic, readonly) enum PullToRefreshState state;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)layoutSubviews;
- (void)startAnimating;
- (void)stopAnimating;
- (void)endDataAnimating;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (void)setTitle:(NSString * _Nullable)title for:(enum PullToRefreshState)state;
- (void)setSubtitle:(NSString * _Nullable)subtitle for:(enum PullToRefreshState)state;
- (void)setCustomView:(UIView * _Nullable)view for:(enum PullToRefreshState)state;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@end


SWIFT_CLASS("_TtC9MyDemoLib7FGTools")
@interface FGTools : NSObject
+ (void)makeErrorToast:(NSError * _Nullable)error;
+ (void)makeToast:(NSString * _Nullable)message duration:(NSTimeInterval)duration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIButton;
@class UIImageView;

SWIFT_CLASS("_TtC9MyDemoLib13FGViewFactory")
@interface FGViewFactory : NSObject
+ (UIButton * _Nonnull)commitButtonWithFrame:(CGRect)rect title:(NSString * _Nullable)title SWIFT_WARN_UNUSED_RESULT;
+ (UIImageView * _Nonnull)nextImageViewWithTintColor:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC9MyDemoLib21FGWKWebViewController")
@interface FGWKWebViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface FGWKWebViewController (SWIFT_EXTENSION(MyDemoLib)) <WKUIDelegate>
@end


@interface FGWKWebViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end

@class WKWebView;
@class WKNavigation;

@interface FGWKWebViewController (SWIFT_EXTENSION(MyDemoLib)) <WKNavigationDelegate>
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
@end

@class FYMenuItem;

SWIFT_CLASS("_TtC9MyDemoLib6FYMenu")
@interface FYMenu : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FYMenu * _Nonnull standard;)
+ (FYMenu * _Nonnull)standard SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// present menu view
/// \param view container view
///
/// \param rect this parameter decides the location of the little triangle ▲
///
/// \param menuItems items will be showed
///
/// \param selectedBlock selected index call back
///
/// \param dissmissBlock dissmissed call back
///
+ (void)showMenuIn:(UIView * _Nonnull)view from:(CGRect)rect menuItems:(NSArray<FYMenuItem *> * _Nonnull)menuItems selected:(void (^ _Nonnull)(NSInteger))selected dismissed:(void (^ _Nonnull)(void))dismissed;
@end

@class UIImage;

SWIFT_CLASS("_TtC9MyDemoLib10FYMenuItem")
@interface FYMenuItem : NSObject
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic) NSTextAlignment textAlighment;
@property (nonatomic) BOOL isSelected;
@property (nonatomic) BOOL showGradientLine;
@property (nonatomic) BOOL showSelectImage;
@property (nonatomic, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, strong) UIImage * _Nullable selectImage;
@property (nonatomic) NSInteger index;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MyDemoLib22FYNavigationController")
@interface FYNavigationController : UINavigationController
- (void)viewDidLoad;
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface FYNavigationController (SWIFT_EXTENSION(MyDemoLib)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, InfiniteScrollingState, open) {
  InfiniteScrollingStateStopped = 0,
  InfiniteScrollingStateTriggered = 1,
  InfiniteScrollingStateLoading = 2,
  InfiniteScrollingStateAll = 10,
};



@interface NSString (SWIFT_EXTENSION(MyDemoLib))
- (NSString * _Nonnull)phoneNumberFormat SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isContainChineseString SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9MyDemoLib12PaddingLabel")
@interface PaddingLabel : UILabel
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawTextInRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, PresentationDirection, open) {
  PresentationDirectionLeft = 0,
  PresentationDirectionTop = 1,
  PresentationDirectionRight = 2,
  PresentationDirectionBottom = 3,
  PresentationDirectionMiddle = 4,
};

typedef SWIFT_ENUM(NSInteger, PullToRefreshState, open) {
  PullToRefreshStateStopped = 0,
  PullToRefreshStateTriggered = 1,
  PullToRefreshStateLoading = 2,
  PullToRefreshStateAll = 3,
};


SWIFT_CLASS("_TtC9MyDemoLib26SlideInPresentationManager")
@interface SlideInPresentationManager : NSObject
@property (nonatomic) enum PresentationDirection direction;
@property (nonatomic) BOOL disableCompactHeight;
/// presenting size
@property (nonatomic) CGSize size;
@property (nonatomic) CGPoint offset;
@property (nonatomic, copy) void (^ _Nullable dismissed)(void);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIPresentationController;
@class UITraitCollection;

@interface SlideInPresentationManager (SWIFT_EXTENSION(MyDemoLib)) <UIAdaptivePresentationControllerDelegate>
- (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController * _Nonnull)controller traitCollection:(UITraitCollection * _Nonnull)traitCollection SWIFT_WARN_UNUSED_RESULT;
@end

@protocol UIViewControllerAnimatedTransitioning;

@interface SlideInPresentationManager (SWIFT_EXTENSION(MyDemoLib)) <UIViewControllerTransitioningDelegate>
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, TableOperation, open) {
  TableOperationRefresh = 0,
  TableOperationMoreData = 1,
};


@interface UIAlertController (SWIFT_EXTENSION(MyDemoLib))
- (void)fg_show;
- (void)fg_show:(BOOL)animated;
@end



@interface UIButton (SWIFT_EXTENSION(MyDemoLib))
/// 自定义image与button 位置
/// <ul>
///   <li>
///     在调用该方法前可以先调用 layoutifneed 方法来强制在当前runloop中计算出 button的width height
///   </li>
/// </ul>
/// \param poistion image 相对于button 位置
///
/// \param space image 与 button 间距
///
- (void)resizeImagePositionWithPoistion:(enum ButtonImagePosition)poistion space:(CGFloat)space;
@end


@interface UIColor (SWIFT_EXTENSION(MyDemoLib))
- (nonnull instancetype)initWithHex:(NSInteger)rgb;
- (nonnull instancetype)initWithHex:(NSInteger)rgb alpha:(CGFloat)alpha;
- (nonnull instancetype)initWithHexString:(NSString * _Nonnull)hex;
- (nonnull instancetype)initWithHexString:(NSString * _Nonnull)hex alpha:(CGFloat)alpha;
@end


@interface UINavigationBar (SWIFT_EXTENSION(MyDemoLib))
- (void)fg_setTransparent;
- (void)fg_changeColor:(UIColor * _Nonnull)color;
@end


@interface UINavigationBar (SWIFT_EXTENSION(MyDemoLib))
/// Applies a background gradient with the given colors
- (void)applyWithGradient:(NSArray<UIColor *> * _Nonnull)colors;
- (void)cleanGradient;
@end



@interface UIScrollView (SWIFT_EXTENSION(MyDemoLib))
- (void)addInfiniteScrollingWithActionHandler:(void (^ _Nonnull)(void))actionHandler;
- (void)stopInfiniteScrolling;
@property (nonatomic, readonly, strong) FGInfiniteScrollingView * _Nonnull infiniteScrollingView;
@property (nonatomic) BOOL showsInfiniteScrolling;
@end


@interface UIScrollView (SWIFT_EXTENSION(MyDemoLib))
@property (nonatomic, readonly, strong) FGPullToRefreshView * _Nonnull pullToRefreshView;
- (void)addPullToRefreshWithActionHandler:(void (^ _Nonnull)(void))actionHandler;
- (void)addPulltoRefreshWithHeight:(CGFloat)height actionHandler:(void (^ _Nonnull)(void))actionHandler;
- (void)triggerPullToRefresh;
- (void)stopRefreshing;
@property (nonatomic) BOOL showsPullToRefresh;
@end



@interface UITabBar (SWIFT_EXTENSION(MyDemoLib))
- (void)showBadgeAt:(NSInteger)itemIndex;
- (void)hideBadgeAt:(NSInteger)itemIndex;
@end







@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (BOOL)fg_isModal SWIFT_WARN_UNUSED_RESULT;
@end



@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)showHUD;
- (void)showHUD:(UIView * _Nullable)container;
- (void)hideHUD;
- (void)hideHUD:(UIView * _Nullable)container;
@end


@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)presentSlideIn:(UIViewController * _Nonnull)viewController animated:(BOOL)animated direction:(enum PresentationDirection)direction offset:(CGPoint)offset completion:(void (^ _Nullable)(void))completion dismissed:(void (^ _Nullable)(void))dismissed;
- (void)presentSlideIn:(UIViewController * _Nonnull)viewController direction:(enum PresentationDirection)direction offset:(CGPoint)offset;
- (void)dismissSlideInViewControllerWithAnimated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
@end


@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (void)showTips:(NSString * _Nonnull)tips;
- (void)showTips:(NSString * _Nonnull)tips container:(UIView * _Nullable)container;
- (void)showAttributeTips:(NSAttributedString * _Nonnull)tips container:(UIView * _Nullable)container;
- (void)showTipsWithError:(NSError * _Nonnull)error;
- (void)showTipsWithError:(NSError * _Nonnull)error container:(UIView * _Nullable)container;
- (void)hideTips;
- (void)hideTips:(UIView * _Nullable)container;
@end


@interface UIViewController (SWIFT_EXTENSION(MyDemoLib))
- (UIButton * _Nonnull)fg_defaultBackBarButton SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_leftBarButtonWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_leftBarButtonWithImage:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_rightBarButtonWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (UIButton * _Nonnull)fg_rightBarButtonWithImage:(UIImage * _Nullable)image SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIButton *> * _Nonnull)fg_rightBarButtonsWithImages:(NSArray<UIImage *> * _Nonnull)images SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIButton *> * _Nonnull)fg_rightBarButtonsWithStrings:(NSArray<NSString *> * _Nonnull)strings SWIFT_WARN_UNUSED_RESULT;
- (void)fg_barButtonWithCustomView:(UIView * _Nonnull)customView;
- (void)fg_barButtonWithCustomView:(UIView * _Nonnull)customView left:(BOOL)left;
- (void)fg_barButtonWithCustomViews:(NSArray<UIView *> * _Nonnull)customViews;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
